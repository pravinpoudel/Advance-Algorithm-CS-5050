"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var margin={top:20,right:20,bottom:40,left:50},width=600-margin.left-margin.right,height=400-margin.top-margin.bottom,title="Runtime Function of Simple Recursive Nim Algorithm",x=d3.scaleLinear().range([0,width]),y=d3.scaleLinear().range([height,0]),lines=(y=d3.scaleLog().base(10).domain([1,1e3]).range([height,0]),d3.line().x(function(t){return x(t.number)}).y(function(t){return y(t.executionTime)}));d3.select("body").append("h3").attr("class","graph-title").text(title);var svg=d3.select("body").append("svg").attr("width",600).attr("height",400).append("g").attr("transform","translate( ".concat(margin.left," , ").concat(margin.top,")"));svg.append("text").attr("class","xaxis-label").attr("transform","translate("+.4*width+","+(height+margin.top+10)+")").text("number of items in the heap"),svg.append("text").attr("class","yaxis-label").attr("transform","rotate(-90)").attr("x",0-.5*height).attr("y",0-margin.left-5).attr("dy","14px").text("execution time (sec)"),d3.csv("files/timeRecord2.csv",function(t,e){if(t)throw console.error(t),t;e.forEach(function(t){t.number=Number(t.number),t.executionTime=Number(t.executionTime)}),x.domain([0,d3.max(e,function(t){return t.number})]),y.domain(d3.extent(e,function(t){return console.log(_typeof(t.executionTime)),t.executionTime})),svg.append("path").data([e]).attr("class","line").attr("d",lines),svg.append("g").attr("transform","translate(0, 340)").call(d3.axisBottom(x)),svg.append("g").call(d3.axisLeft(y))});
//# sourceMappingURL=graphPlot.min.js.map
