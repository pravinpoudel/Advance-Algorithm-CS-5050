{"version":3,"sources":["slopeCalculator.js"],"names":["finalPoint","data","Math","log","findSlope","pointArray","document","getElementById","innerHTML","toFixed"],"mappings":"aAAA,IAAIA,WAAa,CACf,CAAC,EAAG,qBADN,CAAA,GAAIA,qBAOFA,WAAOC,IAAP,SAAAA,GAAA,OAFFA,EAAA,GAAAC,KAAAC,IAAAF,EAAA,IAESA,IAQP,IAAAG,UAAA,SAAAC,GAAA,OAHGA,EAAW,GAAG,GAAKA,EAAW,GAAG,KAMtCC,EAASC,GAAAA,GAAeF,EAAxB,GAAqCG,KAArCF,SAASC,eAAe,aAAaC,UACnC,qEACAJ,UAAUJ,YAAYS,QAAQ","file":"slopeCalculator.min.js","sourcesContent":["let finalPoint = [\r\n  [1, 0.008314599990844726],\r\n  [69, 2017.8069363999962],\r\n];\r\n\r\nfinalPoint.map((data) => {\r\n  data[1] = Math.log(data[1]);\r\n  return data;\r\n});\r\n\r\nconst findSlope = (pointArray) => {\r\n  let slope =\r\n    (pointArray[1][1] - pointArray[0][1]) /\r\n    (pointArray[1][0] - pointArray[0][0]);\r\n\r\n  return slope;\r\n};\r\n\r\ndocument.getElementById(\"slopeCard\").innerHTML =\r\n  \"Emperical Finding of a Slope of a line in (linear - log) graph is \" +\r\n  findSlope(finalPoint).toFixed(3);\r\n"]}